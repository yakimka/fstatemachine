name: Run linters, tests and upload to pypi

on: ['push', 'pull_request']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run linting
        run: tox -e flake8

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.6, 3.7, 3.8, 3.9, 'pypy-3.7' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run Tox
        # Run tox using the version of Python in `PATH`
        run: tox -e py
      - name: Upload coverage to Codecov
        if: matrix.python == 3.9
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install sphinx and other packages
        run: pip install sphinx && pip install -r docs/requirements.txt
      - name: make docs
        run: cd docs && make html

  build-n-publish:
    name: upload to pypi
    runs-on: ubuntu-latest
    needs: [lint, test, docs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
      #      - name: Publish distribution ðŸ“¦ to Test PyPI
      #        uses: pypa/gh-action-pypi-publish@release/v1
      #        with:
      #          user: __token__
      #          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
